package nextgreaternumericallybalancednumber

// https://leetcode.com/problems/next-greater-numerically-balanced-number/description/?envType=daily-question&envId=2025-10-24

// Вернуть следующее наименьшее сбалансированное число
// Сбалансированное число - число, у которого для каждой цифры в числе имеется столько же вхождений в это число
// Например: 22 - сбалансированное число, у него 2 вхождения цифры 2
// 1 - сбалансированное число, у него 1 вхождение цифры 1
// 121 - несбалансированное число, у него 2 вхождения цифры 1 и 1 вхождение цифры 2
// 221 - сбалансированное число, у него 2 вхождения цифры 2 и 1 вхождение цифры 1

// Пример 2:

// Вход: n = 1000
//  Выход: 1333
//  Пояснение:
// 1333 численно сбалансирован, поскольку:
// - Цифра 1 встречается 1 раз.
// - Цифра 3 встречается 3 раза.
// Это также наименьшее число, строго большее 1000.
// Обратите внимание, что 1022 не может быть ответом, поскольку 0 встречается более 0 раз.
// Пример 3:

// Вход: n = 3000
//  Выход: 3133
//  Пояснение:
// 3133 численно сбалансирован, поскольку:
// - Цифра 1 встречается 1 раз.
// - Цифра 3 встречается 3 раза.
// Это также наименьшее число, строго превышающее 3000.

// Ограничения:
// 1 <= n <= 10^6

// Идея:
// 6-значное число строится по правилам - [6, [5,1], [4, 2], [3, 2, 1]], нижняя граница - 55555, верхняя - 66665
// 5-значное число строится по правилам - [5, [4,1], [3,2]] - нижняя граница - 4444, верхняя - 55554
// 4-значное число строится по правилам - [4] - нижняя граница - 333, верхняя - 4443
// 3-значное число строится по правилам - [3, [2,1]] - нижняя граница - 22, верхняя - 332
// 2-значное число строится по правилам - [2] - нижняя граница - 1, верхняя - 21
// 1-значное число строится по правилам - [1] - нижняя граница - 0, верхняя - 1

func nextBeautifulNumber(n int) int {
	if n == 0 {
		return 1
	}

	if n == 1 {
		return 22
	}

	if n >= 21 && n < 332 {
		if n > 222 {
			return 333
		}

		return combine(n, [][]int{[]int{3}, []int{2, 1}})
	}

	if n >= 333 && n < 4443 {
		return combine(n, [][]int{[]int{4}})
	}

	if n >= 4444 && n < 55554 {
		return combine(n, [][]int{[]int{5}, []int{4, 1}, []int{3, 2}})
	}

	if n >= 55555 && n < 66665 {
		return combine(n, [][]int{[]int{6}})
	}

	return -1
}

func combine(n int, nums [][]int) int {
	return 0
}
