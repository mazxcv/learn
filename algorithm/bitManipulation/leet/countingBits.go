package leet

// https://leetcode.com/problems/counting-bits/description/

// Дано целое число n, вернуть массив, содержащий количество единиц в двоичном представлении чисел от 0 до n

// Идея.
// Для нуля считаем 0
// Для числа 1 считаем 1
// Теперь если сдвинуть n влево на 1, то количество единиц начинается заново с 1
// И если опять сдвинуть n влево на 1, то количество единиц начинается заново с 1
// Получается что степени двойки всегда содержат количество единиц = 1
// Далее полностью повторяется количество единиц в предыдущей степени двойки
// Поскольку индекс массива известен и равен степени двойки, то мы можем заполнить массив динамически

func countBits(n int) []int {
	res := make([]int, n+1)

	for i := 1; i <= n; i++ {
		res[i] = res[i>>1] + (i & 1)
	}

	return res
}
